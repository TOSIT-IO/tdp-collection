# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: Backup configuration
  ansible.builtin.copy:
    src: "{{ knox_conf_dir }}/"
    dest: "{{ knox_conf_dir }}.{{ ansible_date_time.epoch }}"
    owner: root
    group: root
    mode: "755"
    remote_src: true
  tags:
    - backup

- name: Copy services definition to data directory
  ansible.builtin.copy:
    src: "{{ knox_install_dir }}/data/services"
    dest: "{{ knox_data_dir }}/data/"
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "755"
    remote_src: true

- name: Copy applications definition to data directory
  ansible.builtin.copy:
    src: "{{ knox_install_dir }}/data/applications"
    dest: "{{ knox_data_dir }}/data/"
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "755"
    remote_src: true

# Spark Historyserver service definition
- name: Create Spark Historyserver service dir
  ansible.builtin.file:
    path: "{{ knox_data_dir }}/data/services/sparkhistoryui/2.3.0"
    state: directory
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "755"

- name: Template Spark Historyserver service.xml
  ansible.builtin.template:
    src: services/sparkhistoryui/2.3.0/service.xml.j2
    dest: "{{ knox_data_dir }}/data/services/sparkhistoryui/2.3.0/service.xml"
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "644"

- name: Template Spark Historyserver rewrite.xml
  ansible.builtin.template:
    src: services/sparkhistoryui/2.3.0/rewrite.xml.j2
    dest: "{{ knox_data_dir }}/data/services/sparkhistoryui/2.3.0/rewrite.xml"
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "644"

- name: Template Spark3 Historyserver rewrite.xml
  ansible.builtin.template:
    src: services/spark3historyui/3.0.0/rewrite.xml.j2
    dest: "{{ knox_data_dir }}/data/services/spark3historyui/3.0.0/rewrite.xml"
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "644"

- name: Template Yarn UI rewrite.xml
  ansible.builtin.template:
    src: services/yarnui/2.7.0/rewrite.xml.j2
    dest: "{{ knox_data_dir }}/data/services/yarnui/2.7.0/rewrite.xml"
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "644"

# Livy Spark 3 service definition
- name: Create Livy Spark 3 service dir
  ansible.builtin.file:
    path: "{{ knox_data_dir }}/data/services/livy3/0.4.3"
    state: directory
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "755"

- name: Template Livy Spark 3 service.xml
  ansible.builtin.template:
    src: services/livy3/0.4.3/service.xml.j2
    dest: "{{ knox_data_dir }}/data/services/livy3/0.4.3/service.xml"
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "644"

- name: Template Livy Spark 3 rewrite.xml
  ansible.builtin.template:
    src: services/livy3/0.4.3/rewrite.xml.j2
    dest: "{{ knox_data_dir }}/data/services/livy3/0.4.3/rewrite.xml"
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "644"

# Livy Spark 2 service definition
- name: Create Livy Spark 2 service dir
  ansible.builtin.file:
    path: "{{ knox_data_dir }}/data/services/livy/0.4.3"
    state: directory
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "755"

- name: Template Livy Spark 2 service.xml
  ansible.builtin.template:
    src: services/livy/0.4.3/service.xml.j2
    dest: "{{ knox_data_dir }}/data/services/livy/0.4.3/service.xml"
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "644"

- name: Template Livy Spark 2 rewrite.xml
  ansible.builtin.template:
    src: services/livy/0.4.3/rewrite.xml.j2
    dest: "{{ knox_data_dir }}/data/services/livy/0.4.3/rewrite.xml"
    owner: "{{ knox_user }}"
    group: "{{ knox_group }}"
    mode: "644"

- name: Template Knox gateway-site.xml
  ansible.builtin.template:
    src: gateway-site.xml.j2
    dest: "{{ knox_conf_dir }}/gateway-site.xml"
    owner: root
    group: root
    mode: "644"

- name: Template Knox Gateway main start script "gateway.sh"
  ansible.builtin.template:
    src: gateway.sh.j2
    dest: "{{ knox_install_dir }}/bin/gateway.sh"
    owner: root
    group: root
    mode: "755"

- name: Template KnoxCLI script
  ansible.builtin.template:
    src: knoxcli.sh.j2
    dest: "{{ knox_install_dir }}/bin/knoxcli.sh"
    owner: root
    group: root
    mode: "755"

- name: Template Knox Gateway environment script "knox-env.sh"
  ansible.builtin.template:
    src: knox-env.sh.j2
    dest: "{{ knox_install_dir }}/bin/knox-env.sh"
    owner: root
    group: root
    mode: "644"

- name: Template Knox Gateway log4j.properties file
  ansible.builtin.template:
    src: gateway-log4j.properties.j2
    dest: "{{ knox_conf_dir }}/gateway-log4j.properties"
    owner: root
    group: root
    mode: "644"

- name: Template Knox Gateway Cli log4j.properties file
  ansible.builtin.template:
    src: knoxcli-log4j.properties.j2
    dest: "{{ knox_conf_dir }}/knoxcli-log4j.properties"
    owner: root
    group: root
    mode: "644"

- name: Template Knox Gateway Ldap log4j.properties file
  ansible.builtin.template:
    src: ldap-log4j.properties.j2
    dest: "{{ knox_conf_dir }}/ldap-log4j.properties"
    owner: root
    group: root
    mode: "644"

- name: Template Knox Gateway Shell log4j.properties file
  ansible.builtin.template:
    src: shell-log4j.properties.j2
    dest: "{{ knox_conf_dir }}/shell-log4j.properties"
    owner: root
    group: root
    mode: "644"

- name: Template Knox topologies
  ansible.builtin.template:
    src: topology.xml.j2
    dest: "{{ knox_conf_dir }}/topologies/{{ item.key }}.xml"
    owner: root
    group: root
    mode: "644"
  loop: "{{ gateway_topology | dict2items }}"
  vars:
    topology: "{{ item.value }}"

- name: Generate Knox master secret
  become_user: knox
  ansible.builtin.shell: |
    set timeout 10
    spawn {{ knox_install_dir }}/bin/knoxcli.sh create-master --force

    expect "Enter master secret:"
    send "{{ knox_keystore_password }}\r"

    expect "Enter master secret again:"
    send "{{ knox_keystore_password }}\r"

    expect eof
    exit 0
  args:
    executable: /usr/bin/expect
    creates: "{{ knox_data_dir }}/data/security/master"
  register: reg_knox_master_secret

- name: Save secrets in Knox store
  become_user: knox
  ansible.builtin.command: |
    {{ knox_install_dir }}/bin/knoxcli.sh \
      create-alias {{ item.key }} \
      --value '{{ item.value }}' \
      --force
  loop: "{{ knox_secrets | dict2items }}"
  failed_when: false
  no_log: true

- name: Ensure truststore is valid
  ansible.builtin.include_role:
    name: tosit.tdp.utils.ssl_tls
    tasks_from: verify_truststore
  vars:
    truststore_location: "/etc/pki/java/cacerts"
    truststore_password: "changeit"
    alias: "gateway-identity"

- name: Render jmxremote.password
  ansible.builtin.template:
    src: jmxremote.password.j2
    dest: "{{ knox_conf_dir }}/jmxremote.password"
    owner: root
    group: root
    mode: "644"
