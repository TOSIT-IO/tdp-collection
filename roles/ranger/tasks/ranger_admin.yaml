---
- name: Install mysql-connector-java
  package:
    name: mysql-connector-java
    state: present

- name: Template install.properties
  template:
    src: install.properties.j2
    dest: "{{ ranger_install_dir }}/install.properties"

- name: Convert cert and key to pk12
  shell: openssl pkcs12 -export -in /etc/ssl/certs/{{ ansible_fqdn }}.pem -inkey /etc/ssl/certs/{{ ansible_fqdn }}.key -out /tmp/{{ ansible_fqdn }}.p12 -name {{ ansible_fqdn }} -CAfile /etc/ssl/certs/root.pem -caname root_ca -password pass:{{ ranger_keystore_password }}

- name: Verify if keystore already exists
  stat:
    path: '{{ ranger_keystore_location }}'
  register: keystore

- name: Create keystore
  shell: keytool -importkeystore -deststorepass {{ ranger_keystore_password }} -destkeypass {{ ranger_keystore_password }} -destkeystore {{ ranger_keystore_location }} -srckeystore /tmp/{{ ansible_fqdn }}.p12 -srcstoretype PKCS12 -srcstorepass {{ ranger_keystore_password }} -alias {{ ansible_fqdn }}
  when: not keystore.stat.exists

- name: Add Certificate Authority to the keystore
  shell: keytool -keystore {{ ranger_keystore_location }} -alias root_ca -import -file /etc/ssl/certs/root.pem -storepass {{ ranger_keystore_password }} -noprompt
  when: not keystore.stat.exists

# Truststore is needed for Hive lookup
- name: Verify if truststore already exists
  stat:
    path: '{{ ranger_truststore_location }}'
  register: truststore

- name: Create truststore
  shell: keytool -keystore {{ ranger_truststore_location }} -deststorepass {{ ranger_truststore_password }} -alias root_ca -import -file /etc/ssl/certs/root.pem -noprompt
  when: not truststore.stat.exists

- name: Generate principals and keytabs for Ranger Lookup
  shell: |
    cd /etc/security/keytabs
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "addprinc -pw {{ princ_password }} rangerlookup/{{ ansible_fqdn }}"
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "xst -k rangerlookup.service.keytab rangerlookup/{{ ansible_fqdn }}@{{ realm }}"
    chown {{ ranger_user }}:{{ hadoop_group }} rangerlookup.service.keytab

- name: Generate principals and keytabs for spnego
  shell: |
    cd /etc/security/keytabs
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "addprinc -pw {{ princ_password }} HTTP/{{ ansible_fqdn }}"
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "xst -k spnego.service.keytab HTTP/{{ ansible_fqdn }}@{{ realm }}"
    chown {{ ranger_user }}:{{ hadoop_group }} spnego.service.keytab

- name: Run setup.sh
  shell: |
    cd {{ ranger_install_dir }}
    export JAVA_HOME=/usr/lib/jvm/jre-1.8.0-openjdk
    ./setup.sh

- name: Create symbolic link to configuration directory
  file:
    src: '{{ ranger_install_dir }}/conf'
    dest: '{{ ranger_adm_conf_dir }}'
    state: link
    group: '{{ hadoop_group }}'
    owner: '{{ ranger_user }}'

# Needed for HDFS path lookup in policy creation
- name: Copy hdfs-site.xml
  copy:
    src: /etc/hadoop/conf/hdfs-site.xml
    dest: '{{ ranger_install_dir }}/conf/hdfs-site.xml'
    remote_src: yes

- name: Template Ranger Admin service file
  template:
    src: ranger-admin.service.j2
    dest: /usr/lib/systemd/system/ranger-admin.service
