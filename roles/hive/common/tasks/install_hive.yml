# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: Upload {{ hive_dist_file }}
  ansible.builtin.copy:
    src: "{{ binaries_local_dir }}/{{ hive_dist_file }}"
    dest: "{{ binaries_upload_dir }}"
    owner: root
    group: root
    mode: "644"
  diff: false

- name: Extract {{ hive_dist_file }}
  ansible.builtin.unarchive:
    src: "{{ binaries_upload_dir }}/{{ hive_dist_file }}"
    dest: "{{ hive_root_dir }}"
    owner: root
    group: root
    mode: "755"
    remote_src: true
    creates: "{{ hive_root_dir }}/{{ hive_release }}"

- name: Ensure hive installation permissions
  ansible.builtin.file:
    path: "{{ hive_root_dir }}/{{ hive_release }}"
    owner: root
    group: root
    mode: "755"
    state: directory
    recurse: true

- name: Create symbolic link to Hive installation
  ansible.builtin.file:
    src: "{{ hive_root_dir }}/{{ hive_release }}"
    dest: "{{ hive_install_dir }}"
    state: link

- name: Ensure hive user exists
  ansible.builtin.include_role:
    name: tosit.tdp.utils.user
  vars:
    user: "{{ hive_user }}"
    group: "{{ hadoop_group }}"

- name: Create directory for pid
  ansible.builtin.file:
    path: "{{ hive_pid_dir }}"
    state: directory
    owner: "{{ hive_user }}"
    group: "{{ hadoop_group }}"
    mode: "755"

- name: Template hive tmpfiles.d
  ansible.builtin.template:
    src: tmpfiles-hive-server2.conf.j2
    dest: /etc/tmpfiles.d/hive-server2.conf
    owner: root
    group: root
    mode: "644"

- name: Create log directory
  ansible.builtin.file:
    path: "{{ hive_log_dir }}"
    state: directory
    owner: "{{ hive_user }}"
    group: "{{ hadoop_group }}"
    mode: "750"

- name: Upload {{ tez_dist_file }}
  ansible.builtin.copy:
    src: "{{ binaries_local_dir }}/{{ tez_dist_file }}"
    dest: "{{ binaries_upload_dir }}"
    owner: root
    group: root
    mode: "644"
  diff: false

- name: Create Tez extract dir
  ansible.builtin.file:
    path: "{{ tez_root_dir }}/{{ tez_release }}"
    state: directory
    owner: root
    group: root
    mode: "755"

- name: Extract {{ tez_dist_file }}
  ansible.builtin.unarchive:
    src: "{{ binaries_upload_dir }}/{{ tez_dist_file }}"
    dest: "{{ tez_root_dir }}/{{ tez_release }}"
    owner: root
    group: root
    mode: "755"
    remote_src: true
    creates: "{{ tez_root_dir }}/{{ tez_release }}/lib"

- name: Create symbolic link to Tez installation
  ansible.builtin.file:
    src: "{{ tez_root_dir }}/{{ tez_release }}"
    dest: "{{ tez_install_dir }}"
    state: link

# NOTE: If this jar is not moved, logging to /var/log/hive/hiveserver2.log does not happen and everything gets sent to Console output
# TODO: Find a better way to deal with this issue
- name: Remove lib/slf4j-log4j12-1.7.10.jar
  ansible.builtin.file:
    path: "{{ tez_install_dir }}/lib/slf4j-log4j12-1.7.10.jar"
    state: absent

# NOTE: If this jar is not moved, Cli can not be executed
# TODO: Find a better way to deal with this issue
- name: Remove lib/jline-0.9.94.jar
  ansible.builtin.file:
    path: "{{ tez_install_dir }}/lib/jline-0.9.94.jar"
    state: absent

# NOTE: templating schemaTool using standalone metastore class because of HIVE-26402
- name: Template metaSchemaTool.sh
  ansible.builtin.template:
    src: metaSchemaTool.sh.j2
    dest: "{{ hive_install_dir }}/bin/ext/metaSchemaTool.sh"
    owner: root
    group: root
    mode: "755"
