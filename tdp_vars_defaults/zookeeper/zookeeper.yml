# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
# ZooKeeper version
zookeeper_version: 3.4.6
zookeeper_dist_release: "zookeeper-{{ zookeeper_version }}"
zookeeper_dist_file: "{{ zookeeper_dist_release }}.tar.gz"

# ZooKeeper users and group
zookeeper_user: zookeeper
hadoop_group: hadoop

# ZooKeeper installation directory
hadoop_root_dir: /opt/tdp
zookeeper_install_dir: "{{ hadoop_root_dir }}/zookeeper"

# ZooKeeper configuration directories
zookeeper_root_conf_dir: /etc/zookeeper
zookeeper_server_conf_dir: "{{ zookeeper_root_conf_dir }}/conf.server"
zookeeper_client_conf_dir: "{{ zookeeper_root_conf_dir }}/conf"

# ZooKeeper data directory
zookeeper_data_dir: "{{ zookeeper_install_dir }}/zkData"

# ZooKeeper server service name
zookeeper_server_service_name: zookeeper
zookeeper_server_service_desc: ZooKeeper Server

# ZooKeeper servers
zk_servers: |
  {{ groups['zk'] | 
     map('tosit.tdp.access_fqdn', hostvars) | 
     map('regex_replace', '^(.*)$', '\1:' + (zookeeper_server_quorum_port | string) + ':' + (zookeeper_server_election_port | string)) |
     list }}
zookeeper_client_quorum: |
  {{ groups['zk'] | 
     map('tosit.tdp.access_fqdn', hostvars) |
     map('regex_replace', '^(.*)$', '\1:' + zookeeper_server_client_port | string) |
     list |
     join(',') }}

# ZooKeeper CLI command
zookeeper_cli_cmd_script: /usr/bin/zkCli.sh

# ZooKeeper logging configuration
zookeeper_log_dir: /var/log/zookeeper
zookeeper_log_file: zookeeper.log
zookeeper_tracelog_file: zookeeper_trace.log
zookeeper_root_logger: INFO,ROLLINGFILE
zookeeper_console_threshold: INFO
zookeeper_log_threshold: DEBUG

# Kerberos
###
# Set to 'no' to skip service principals and keytabs creation.
# This can be useful if TDP operators don't have admin access to the Kerberos server,
# or if the Kerberos server does not support MIT Kerberos tools.
###
krb_create_principals_keytabs: yes

# ZooKeeper component & service check
zookeeper_check_retries: 0
zookeeper_check_delay: 5
zookeeper_check_port_str: "Connected to"
zookeeper_check_znode: "/service_check_{{ ansible_date_time.iso8601_basic }}"

# zoo.cfg
zookeeper_cfg:
  dataDir: "{{ zookeeper_data_dir }}"
  clientPort: "{{ zookeeper_server_client_port }}"
  tickTime: 2000
  initLimit: 10
  syncLimit: 5
  authProvider.1: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
  jaasLoginRenew: 3600000
  kerberos.removeHostFromPrincipal: "true"
  kerberos.removeRealmFromPrincipal: "true"

# Service start on boot policies
zk_start_on_boot: no

# Service restart policies
zk_restart: "no"

# jmx exporter installation directory
jmx_exporter_root_dir: /opt/tdp/jmx-exporter
jmx_exporter_install_file: "{{ jmx_exporter_root_dir }}/jmx-exporter.jar"
jmx_common_opts: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.ssl=true"
jmx_exporter_zk_file: zk.yml
jmx_exporter_zk_port: 18109
jmx_exporter_zk_opts: "{% if 'exporter_jmx' in groups and groups['exporter_jmx'] %}-javaagent:{{ jmx_exporter_install_file }}={{ jmx_exporter_zk_port }}:{{ jmx_exporter_conf_dir }}/{{ jmx_exporter_zk_file }}{% else %}{% endif %}"

# jmx exporter configuration directory
jmx_exporter_conf_dir: /etc/jmx-exporter

jmxremote_username: jmxuser
jmxremote_password: Tdpjmx123,
#jmx-exporter.yml
jmx_exporter:
  startDelaySeconds: 0
  ssl: true
  username: "{{ jmxremote_username }}"
  password: "{{ jmxremote_password }}"
  lowercaseOutputName: false
  lowercaseOutputLabelNames: false
