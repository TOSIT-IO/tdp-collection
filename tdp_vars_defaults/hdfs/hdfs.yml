# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
hdfs_user: hdfs

hadoop_hdfs_dir: /var/lib/hdfs
hadoop_hdfs_pid_dir: /run/hadoop/hdfs
hadoop_hdfs_log_dir: /var/log/hadoop/hdfs

# hdfs-site.xml - common
# TODO: make a hdfs_site per service: nn, jn, dn
hdfs_site:
  dfs.nameservices: mycluster
  dfs.ha.namenodes.mycluster: nn1,nn2
  dfs.ha.fencing.methods: shell(/bin/true)
  dfs.ha.automatic-failover.enabled: "true"
  dfs.http.policy: HTTPS_ONLY
  dfs.data.transfer.protection: authentication
  dfs.web.authentication.kerberos.keytab: /etc/security/keytabs/spnego.service.keytab
  dfs.web.authentication.kerberos.principal: "HTTP/_HOST@{{ realm }}"
  dfs.namenode.rpc-address.mycluster.nn1: "{{ groups['hdfs_nn'][0] | tosit.tdp.access_fqdn(hostvars) }}:{{ hdfs_nn_rpc_port }}"
  dfs.namenode.rpc-address.mycluster.nn2: "{{ groups['hdfs_nn'][1] | tosit.tdp.access_fqdn(hostvars) }}:{{ hdfs_nn_rpc_port }}"
  dfs.namenode.http-address.mycluster.nn1: "{{ groups['hdfs_nn'][0] | tosit.tdp.access_fqdn(hostvars) }}:{{ hdfs_nn_http_port }}"
  dfs.namenode.http-address.mycluster.nn2: "{{ groups['hdfs_nn'][1] | tosit.tdp.access_fqdn(hostvars) }}:{{ hdfs_nn_http_port }}"
  dfs.namenode.https-address.mycluster.nn1: "{{ groups['hdfs_nn'][0] | tosit.tdp.access_fqdn(hostvars) }}:{{ hdfs_nn_https_port }}"
  dfs.namenode.https-address.mycluster.nn2: "{{ groups['hdfs_nn'][1] | tosit.tdp.access_fqdn(hostvars) }}:{{ hdfs_nn_https_port }}"
  dfs.namenode.name.dir: "{{ hadoop_hdfs_dir }}/nn"
  dfs.namenode.shared.edits.dir: |-
    qjournal://{{ groups['hdfs_jn'] |
       map('tosit.tdp.access_fqdn', hostvars) |
       map('regex_replace', '^(.*)$', '\1:' + hdfs_jn_rpc_port | string) |
       list |
       join(';')
    }}/mycluster

  dfs.namenode.kerberos.principal: "nn/_HOST@{{ realm }}"
  dfs.namenode.keytab.file: /etc/security/keytabs/nn.service.keytab
  dfs.namenode.kerberos.internal.spnego.principal: "HTTP/_HOST@{{ realm }}"
  dfs.namenode.num.checkpoints.retained: 3
  dfs.namenode.name.dir.restore: true
  dfs.client.failover.proxy.provider.mycluster: org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider
  dfs.journalnode.edits.dir: "{{ hadoop_hdfs_dir }}/jn"
  dfs.journalnode.rpc-address: 0.0.0.0:{{ hdfs_jn_rpc_port }}
  dfs.journalnode.https-address: 0.0.0.0:{{ hdfs_jn_https_port }}
  dfs.journalnode.kerberos.principal: jn/_HOST@{{ realm }}
  dfs.journalnode.keytab.file: /etc/security/keytabs/jn.service.keytab
  dfs.journalnode.kerberos.internal.spnego.principal: "HTTP/_HOST@{{ realm }}"
  dfs.block.access.token.enable: "true"
  dfs.datanode.address: "0.0.0.0:{{ hdfs_dn_rpc_port }}"
  dfs.datanode.https.address: "0.0.0.0:{{ hdfs_dn_https_port }}"
  dfs.datanode.data.dir: "/data/hdfs/dn"
  dfs.datanode.kerberos.principal: dn/_HOST@{{ realm }}
  dfs.datanode.keytab.file: /etc/security/keytabs/dn.service.keytab
  dfs.encryption.key.provider.uri: "{% if 'ranger_kms' in groups and groups['ranger_kms'] %}{{ ranger_kms_url }}{% else %}{% endif %}"

namenode_kerberos_principal: "nn/{{ ansible_fqdn }}@{{ realm }}"

# Ranger HDFS properties
ranger_hdfs_release: ranger-2.0.1-TDP-0.1.0-SNAPSHOT-hdfs-plugin
ranger_hdfs_dist_file: "{{ ranger_hdfs_release }}.tar.gz"
ranger_hdfs_install_dir: "{{ hadoop_root_dir }}/ranger-hdfs-plugin"
ranger_hdfs_install_properties:
  POLICY_MGR_URL: "https://{{ groups['ranger_admin'][0] | tosit.tdp.access_fqdn(hostvars) }}:6182"
  REPOSITORY_NAME: hdfs-tdp
  XAAUDIT_SOLR_ENABLE: "{% if 'ranger_solr' in groups and groups['ranger_solr'] %}true{% else %}false{% endif %}"
  XAAUDIT_SOLR_URL: "{% if 'ranger_solr' in groups and groups['ranger_solr'] %}http://{{ groups['ranger_solr'][0] | tosit.tdp.access_fqdn(hostvars) }}:8983/solr/ranger_audits{% else %}NONE{% endif %}"

# Service start on boot policies
hdfs_nn_start_on_boot: no
hdfs_dn_start_on_boot: no
hdfs_jn_start_on_boot: no
hdfs_zkfc_start_on_boot: no

# Service restart policies
hdfs_nn_restart: "no"
hdfs_dn_restart: "no"
hdfs_jn_restart: "no"
hdfs_zkfc_restart: "no"

# HDFS component & service check
hdfs_check_retries: 0
hdfs_check_delay: 5
hdfs_check_port_str: "Connected to"
