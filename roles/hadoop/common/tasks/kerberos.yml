---
# First Step : Try to fetch all http_secrets from hosts
- name: Check if /etc/security/http_secret file exists
  stat: 
    path: /etc/security/http_secret
  register: http_secret_stat

- name: Fetch content of http_secret if exists
  slurp:
    src: /etc/security/http_secret
  register: http_secret_encoded
  when: http_secret_stat.stat.exists

- name: Set local facts where http_secret exists
  set_fact:
    http_secret: "{{ http_secret_encoded.content }}"
  when: http_secret_stat.stat.exists

- name: Set fact the first http_secret found
  vars:
    # Get all local "http_secret" and remove undefined
    http_secret_list: "{{ ansible_play_hosts | map('extract', hostvars, 'http_secret') | select | list }}"
  set_fact:
    http_secret: "{{ http_secret_list | first }}"
  when: http_secret_list | length > 0
  run_once: yes

# Second Step : Create a new http_secret if not exists
- name: Create a new http_secret when not exists
  command: dd if=/dev/urandom of=/etc/security/http_secret bs=1024 count=1
  run_once: yes
  args:
    creates: /etc/security/http_secret
  when: http_secret is not defined

- name: Load the new http_secret when not exists
  slurp:
    src: /etc/security/http_secret
  register: http_secret_encoded
  run_once: yes
  when: http_secret is not defined

- name: Set fact the new http_secret when not exists
  set_fact:
    http_secret: "{{ http_secret_encoded.content }}"
  run_once: yes
  when: http_secret is not defined

# Final Step : Copy the http_secret to all nodes with an idempotent behavior
- name: Copy http_secret to all nodes
  copy:
    content: "{{ http_secret | b64decode }}"
    dest: /etc/security/http_secret
    owner: hdfs
    group: hadoop
    mode: 0444
  no_log: yes
