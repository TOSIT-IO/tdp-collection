# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: ZK server component check - Check ZK systemd
  ansible.builtin.service_facts:
  register: zk_systemd_res
  retries: "{{ zookeeper_check_retries }}"
  delay: "{{ zookeeper_check_delay }}"
  until: zk_systemd_res.ansible_facts.services["zookeeper.service"].state == 'running'
  failed_when: zk_systemd_res.ansible_facts.services["zookeeper.service"].state != 'running'

- name: ZK server component check - Check ZK port
  ansible.builtin.shell: /usr/bin/ncat -nzv 127.0.0.1 {{ zookeeper_server_client_port }}
  register: zk_port_res
  retries: "{{ zookeeper_check_retries }}"
  delay: "{{ zookeeper_check_delay }}"
  until:
    - 'zk_port_res.rc == 0'
    - 'zookeeper_check_port_str in zk_port_res.stderr'
  failed_when: 'zk_port_res.rc != 0 or zookeeper_check_port_str not in zk_port_res.stderr'

- name: ZK server component check - Check ZK "ruok"
  ansible.builtin.shell: /usr/bin/echo ruok | /usr/bin/ncat 127.0.0.1 {{ zookeeper_server_client_port }}
  register: zk_ruok_res
  retries: "{{ zookeeper_check_retries }}"
  delay: "{{ zookeeper_check_delay }}"
  until:
    - 'zk_ruok_res.rc == 0'
    - '"imok" in zk_ruok_res.stdout'
  failed_when: 'zk_ruok_res.rc != 0 or "imok" not in zk_ruok_res.stdout'

- name: ZK server component check - Check ZK server state
  ansible.builtin.shell: /usr/bin/echo mntr | /usr/bin/ncat 127.0.0.1 {{ zookeeper_server_client_port }} | /usr/bin/awk '$1=="zk_server_state" {print $2}'
  register: zk_svr_state_res
  retries: "{{ zookeeper_check_retries }}"
  delay: "{{ zookeeper_check_delay }}"
  until:
    - 'zk_svr_state_res.rc == 0'
    - '"follower" in zk_svr_state_res.stdout or "leader" in zk_svr_state_res.stdout'
  failed_when: 'zk_svr_state_res.rc != 0 or ("follower" not in zk_svr_state_res.stdout and "leader" not in zk_svr_state_res.stdout)'

- name: ZK server component check - Check ZK synced followers
  ansible.builtin.shell: /usr/bin/echo mntr | /usr/bin/ncat 127.0.0.1 {{ zookeeper_server_client_port }} | /usr/bin/awk '$1=="zk_synced_followers" {print $2}'
  register: zk_sync_follow_res
  when: '"leader" in zk_svr_state_res.stdout'
  retries: "{{ zookeeper_check_retries }}"
  delay: "{{ zookeeper_check_delay }}"
  until:
    - 'zk_sync_follow_res.rc == 0'
    - '(zk_sync_follow_res.stdout | int) == (groups["zk"] | length - 1)'
  failed_when: 'zk_sync_follow_res.rc != 0 or (zk_sync_follow_res.stdout | int) != (groups["zk"] | length - 1)'
