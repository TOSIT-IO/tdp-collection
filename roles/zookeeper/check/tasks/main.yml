# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: ZK service check - Get client port
  ansible.builtin.shell: /usr/bin/cat "{{ zookeeper_install_dir }}/conf/zoo.cfg"
  register: zk_cfg_content

- set_fact:
    zk_clport: "{{ zk_cfg_content.stdout | regex_search('clientPort=(.+)', '\\1') | first }}"

- name: ZK service check - Check create/remove znode
  run_once: yes
  become_user: "{{ zookeeper_user }}"
  block:
  - name: ZK service check - Check create znode
    ansible.builtin.shell: | 
      /opt/tdp/zookeeper/bin/zkCli.sh -server localhost:{{ zk_clport }} << EOF
      create {{ zookeeper_check_znode }} "service-check-znode-data"
      quit
      EOF
    register: zk_create_znode
    failed_when: '("Created " + zookeeper_check_znode) not in zk_create_znode.stderr'

  - name: ZK service check - Check remove znode
    ansible.builtin.shell: |  
      /opt/tdp/zookeeper/bin/zkCli.sh -server localhost:{{ zk_clport }} << EOF
      rmr {{ zookeeper_check_znode }}
      get {{ zookeeper_check_znode }}
      quit
      EOF
    register: zk_remove_znode
    failed_when: '("Node does not exist: " + zookeeper_check_znode) not in zk_remove_znode.stderr'
  always:
  - name: ZK service check - Clean znode
    ansible.builtin.shell: |  
      /opt/tdp/zookeeper/bin/zkCli.sh -server localhost:{{ zk_clport }} << EOF
      rmr {{ zookeeper_check_znode }}
      quit
      EOF
    when: '("Node already exists: " + zookeeper_check_znode) in zk_create_znode.stderr'
