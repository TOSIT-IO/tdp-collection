---
- name: Add hadoop group
  group:
    name: "{{ hadoop_group }}"

- name: Add zookeeper user
  user:
    name: "{{ zookeeper_user }}"
    group: "{{ hadoop_group }}"

- name: Upload {{ zookeeper_dist_file }}
  copy:
    src: "files/{{ zookeeper_dist_file }}"
    dest: /tmp

- name: Ensures {{ hadoop_root_dir }} exists
  file:
    path: "{{ hadoop_root_dir }}"
    state: directory

- name: Extract {{ zookeeper_dist_file }}
  unarchive:
    src: "/tmp/{{ zookeeper_dist_file }}"
    dest: "{{ hadoop_root_dir }}"
    group: root
    owner: root
    remote_src: yes
    creates: "{{ hadoop_root_dir }}/{{ zookeeper_dist_release }}"

- name: Create symbolic link to Zookeeper installation
  file:
    src: "{{ hadoop_root_dir }}/{{ zookeeper_dist_release }}"
    dest: "{{ zookeeper_install_dir }}"
    state: link

- name: Template zoo.cfg
  template:
    src: zoo.cfg.j2
    dest: "{{ zookeeper_install_dir }}/conf/zoo.cfg"

- name: Remove zoo_sample.cfg in {{ zookeeper_install_dir }}
  file:
    path: "{{ zookeeper_install_dir }}/conf/zoo_sample.cfg"
    state: absent

- name: Create zookeeper data directory
  file:
    path: "{{ zookeeper_data_dir }}"
    state: directory
    owner: "{{ zookeeper_user }}"
    group: "{{ hadoop_group }}"

- name: Get an ID for host
  set_fact:
    zk_id: "{{ id + 1  }}"
  loop: "{{ groups['zk'] }}"
  when: inventory_hostname == item
  loop_control:
    index_var: id

- name: Add myid file
  copy:
    dest: "{{ zookeeper_data_dir }}/myid"
    content: "{{ zk_id }}"

- name: Create log directory
  file:
    path: '{{ zookeeper_log_dir }}'
    state: directory
    group: '{{ hadoop_group }}'
    owner: '{{ zookeeper_user }}'

- name: Template log4j.properties
  template:
    src: log4j.properties.j2
    dest: "{{ zookeeper_install_dir }}/conf/log4j.properties"

- name: Template java.env
  template:
    src: java.env.j2
    dest: "{{ zookeeper_install_dir }}/conf/java.env"

- name: Template zookeeper-env.sh
  template:
    src: zookeeper-env.sh.j2
    dest: "{{ zookeeper_install_dir }}/conf/zookeeper-env.sh"

- name: Template Zookeeper service file
  template:
    src: zookeeper.service.j2
    dest: /usr/lib/systemd/system/zookeeper.service
