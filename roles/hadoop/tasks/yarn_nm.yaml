---
- name: Create directory for pid
  file:
    path: '{{ hadoop_yarn_pid_dir }}'
    state: directory
    group: '{{ hadoop_group }}'
    owner: '{{ yarn_user }}'

- name: Create YARN recover directory
  file:
    path: "{{ yarn_site['yarn.nodemanager.recovery.dir'] }}"
    state: directory
    group: '{{ hadoop_group }}'
    owner: '{{ yarn_user }}'

- name: Create YARN log directory
  file:
    path: "{{ yarn_site['yarn.nodemanager.log-dirs'] }}"
    state: directory
    group: '{{ hadoop_group }}'
    owner: '{{ yarn_user }}'

- name: Create YARN local directory
  file:
    path: "{{ yarn_site['yarn.nodemanager.local-dirs'] }}"
    state: directory
    group: '{{ hadoop_group }}'
    owner: '{{ yarn_user }}'

- name: Create log directory
  file:
    path: '{{ hadoop_yarn_log_dir }}'
    state: directory
    group: '{{ hadoop_group }}'
    owner: '{{ yarn_user }}'

- name: Create timestamped configuration directory
  file:
    path: '{{ hadoop_nm_conf_dir }}.{{ ansible_date_time.epoch }}'
    state: directory
    group: '{{ hadoop_group }}'
    owner: '{{ yarn_user }}'

- name: Create symbolic link to timestamped configuration directory
  file:
    src: '{{ hadoop_nm_conf_dir }}.{{ ansible_date_time.epoch }}'
    dest: '{{ hadoop_nm_conf_dir }}'
    state: link
    group: '{{ hadoop_group }}'
    owner: '{{ yarn_user }}'

- name: Template hadoop-env.sh
  template:
    src: hadoop-env.sh.j2
    dest: '{{ hadoop_nm_conf_dir }}.{{ ansible_date_time.epoch }}/hadoop-env.sh'
  vars:
    hadoop_log_dir: "{{ hadoop_yarn_log_dir }}"
    hadoop_pid_dir: "{{ hadoop_yarn_pid_dir }}"

- name: Template log4j.properties
  template:
    src: log4j.properties.j2
    dest: '{{ hadoop_nm_conf_dir }}.{{ ansible_date_time.epoch }}/log4j.properties'
  vars:
    hadoop_log_dir: "{{ hadoop_yarn_log_dir }}"

- name: Template YARN NodeManager service file
  template:
    src: hadoop-yarn-nodemanager.service.j2
    dest: /usr/lib/systemd/system/hadoop-yarn-nodemanager.service

- name: Render core-site.xml
  template:
    src: core-site.xml.j2
    dest: '{{ hadoop_nm_conf_dir }}.{{ ansible_date_time.epoch }}/core-site.xml'

- name: Render hdfs-site.xml
  template:
    src: hdfs-site.xml.j2
    dest: '{{ hadoop_nm_conf_dir }}.{{ ansible_date_time.epoch }}/hdfs-site.xml'

- name: Render yarn-site.xml
  template:
    src: yarn-site.xml.j2
    dest: '{{ hadoop_nm_conf_dir }}.{{ ansible_date_time.epoch }}/yarn-site.xml'

- name: Render ssl-server.xml
  template:
    src: ssl-server.xml.j2
    dest: '{{ hadoop_nm_conf_dir }}.{{ ansible_date_time.epoch }}/ssl-server.xml'

# - name: Render ssl-client.xml
#   template:
#     src: ssl-client.xml.j2
#     dest: '{{ hadoop_nm_conf_dir }}.{{ ansible_date_time.epoch }}/ssl-client.xml'

#TODO: Find a way to have a different location for this file
#      It seems to be mandatory for it to be at <dirname of container-executor binary>/../etc/hadoop/container-executor.cfg
#      See https://docs.cloudera.com/documentation/enterprise/5-9-x/topics/cdh_sg_yarn_security.html
- name: Render container-executor.cfg
  template:
    src: container-executor.cfg.j2
    dest: '{{ hadoop_install_dir }}/etc/hadoop/container-executor.cfg'

- name: Set bin/container-executor ownership, group and permissions
  file:
    path: "{{ hadoop_install_dir }}/bin/container-executor"
    owner: root
    group: "{{ hadoop_group }}"
    mode: '6050'

- name: Generate principals and keytabs
  shell: |
    cd /etc/security/keytabs
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "addprinc -pw {{ princ_password }} nm/{{ ansible_fqdn }}"
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "xst -k nm.service.keytab nm/{{ ansible_fqdn }}@{{ realm }}"
    chown {{ yarn_user }}:{{ hadoop_group }} nm.service.keytab

- name: Generate principals and keytabs for spnego
  shell: |
    cd /etc/security/keytabs
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "addprinc -pw {{ princ_password }} HTTP/{{ ansible_fqdn }}"
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "xst -k spnego.service.keytab HTTP/{{ ansible_fqdn }}@{{ realm }}"
    chown {{ hdfs_user }}:{{ hadoop_group }} spnego.service.keytab
