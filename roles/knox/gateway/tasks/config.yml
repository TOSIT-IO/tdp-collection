# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: Backup configuration
  copy:
    src: '{{ knox_conf_dir }}/'
    dest: '{{ knox_conf_dir }}.{{ ansible_date_time.epoch }}'
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'
    remote_src: yes
  tags:
    - backup

- name: Copy services definition to data directory
  copy:
    src: "{{ knox_install_dir }}/data/services"
    dest: "{{ knox_data_dir }}/data/"
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'
    remote_src: yes

- name: Copy applications definition to data directory
  copy:
    src: "{{ knox_install_dir }}/data/applications"
    dest: "{{ knox_data_dir }}/data/"
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'
    remote_src: yes

# Spark Historyserver service definition
- name: Create Spark Historyserver service dir
  file:
    path: '{{ knox_data_dir }}/data/services/sparkhistoryui/2.3.0'
    state: directory
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'

- name: Template Spark Historyserver service.xml
  template:
    src: services/sparkhistoryui/2.3.0/service.xml.j2
    dest: '{{ knox_data_dir }}/data/services/sparkhistoryui/2.3.0/service.xml'
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'

- name: Template Spark Historyserver rewrite.xml
  template:
    src: services/sparkhistoryui/2.3.0/rewrite.xml.j2
    dest: '{{ knox_data_dir }}/data/services/sparkhistoryui/2.3.0/rewrite.xml'
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'

- name: Template Spark3 Historyserver rewrite.xml
  template:
    src: services/spark3historyui/3.0.0/rewrite.xml.j2
    dest: '{{ knox_data_dir }}/data/services/spark3historyui/3.0.0/rewrite.xml'
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'

- name: Template Yarn UI rewrite.xml
  template:
    src: services/yarnui/2.7.0/rewrite.xml.j2
    dest: '{{ knox_data_dir }}/data/services/yarnui/2.7.0/rewrite.xml'
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'

- name: Template Knox gateway-site.xml
  template:
    src: gateway-site.xml.j2
    dest: '{{ knox_conf_dir }}/gateway-site.xml'

- name: Template Knox Gateway main start script "gateway.sh"
  template:
    src: gateway.sh.j2
    dest: '{{ knox_install_dir }}/bin/gateway.sh'

- name: Template KnoxCLI script
  template:
    src: knoxcli.sh.j2
    dest: '{{ knox_install_dir }}/bin/knoxcli.sh'

- name: Template Knox Gateway environment script "knox-env.sh"
  template:
    src: knox-env.sh.j2
    dest: '{{ knox_install_dir }}/bin/knox-env.sh'

- name: Template Knox Gateway log4j.properties file
  template:
    src: gateway-log4j.properties.j2
    dest: '{{ knox_conf_dir }}/gateway-log4j.properties'

- name: Template Knox Gateway Cli log4j.properties file
  template:
    src: knoxcli-log4j.properties.j2
    dest: '{{ knox_conf_dir }}/knoxcli-log4j.properties'

- name: Template Knox Gateway Ldap log4j.properties file
  template:
    src: ldap-log4j.properties.j2
    dest: '{{ knox_conf_dir }}/ldap-log4j.properties'

- name: Template Knox Gateway Shell log4j.properties file
  template:
    src: shell-log4j.properties.j2
    dest: '{{ knox_conf_dir }}/shell-log4j.properties'

- name: Template Knox topologies
  template:
    src: topology.xml.j2
    dest: '{{ knox_conf_dir }}/topologies/{{ item.key }}.xml'
  loop: "{{ gateway_topology | dict2items }}"
  vars:
    topology: "{{ item.value }}"

- name: Generate Knox master secret
  become_user: knox
  shell: |
    set timeout 10
    spawn {{ knox_install_dir }}/bin/knoxcli.sh create-master --force

    expect "Enter master secret:"
    send "{{ knox_keystore_password }}\r"

    expect "Enter master secret again:"
    send "{{ knox_keystore_password }}\r"

    expect eof
    exit 0
  args:
    executable: /usr/bin/expect
    creates: "{{ knox_data_dir }}/data/security/master"
  register: reg_knox_master_secret

- name: Save keystore password in Knox store
  become_user: knox
  command: |
    {{ knox_install_dir }}/bin/knoxcli.sh \
      create-alias gateway-identity-passphrase \
      --value {{ knox_keystore_password }}
  failed_when: no

- include_role:
    name: tosit.tdp.utils.ssl_tls
    tasks_from: verify_truststore
  vars:
    truststore_location: "/etc/pki/java/cacerts"
    truststore_password: "changeit"
    alias: "gateway-identity"

- name: Render jmxremote.password
  template:
    src: jmxremote.password.j2
    dest: '{{ knox_conf_dir }}/jmxremote.password'
