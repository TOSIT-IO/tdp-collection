# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: Add directory for hive
  run_once: true
  tosit.tdp.hdfs_file:
    hdfs_conf: "{{ hadoop_conf_dir }}"
    path: "{{ item.path }}"
    state: "{{ item.state | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
    kerberos: true
    krb_principal: "{{ hdfs_headless_principal }}@{{ realm }}"
    krb_keytab: /etc/security/keytabs/hdfs.headless.keytab
  become: true
  become_user: "{{ hdfs_user }}"
  loop:
    - path: /warehouse/tablespace/managed/hive
      state: directory
      owner: "{{ hive_user }}"
      group: "{{ hadoop_group }}"
      mode: "700"
    - path: /warehouse/tablespace/external/hive
      state: directory
      owner: "{{ hive_user }}"
      group: "{{ hadoop_group }}"
      mode: "777"
    - path: /tmp/hive
      state: directory
      owner: "{{ hive_user }}"
      group: "{{ hadoop_group }}"
      mode: "733"
    - path: /tdp/tez
      state: directory
    - path: /ranger/audit/hiveServer2
      state: directory
      owner: "{{ hive_user }}"
      group: "{{ hive_user }}"
      mode: "700"
    - path: /user/hive
      state: directory
      owner: "{{ hive_user }}"
      group: "{{ hive_user }}"
      mode: "700"

- name: Kinit for hdfs
  run_once: true
  command: kinit -kt /etc/security/keytabs/hdfs.headless.keytab {{ hdfs_headless_principal }}@{{ realm }}
  become: true
  become_user: "{{ hdfs_user }}"
  changed_when: false

- name: Upload {{ tez_dist_file }}
  copy:
    src: "{{ binaries_local_dir }}/{{ tez_dist_file }}"
    dest: "{{ binaries_upload_dir }}"
    owner: root
    group: root
    mode: "644"
  diff: false

- name: Put tez release to hdfs
  run_once: true
  command: "{{ hadoop_root_dir }}/hadoop/bin/hdfs --config {{ hadoop_conf_dir }} dfs -put {{ binaries_upload_dir }}/{{ tez_dist_file }} /tdp/tez"
  become: true
  become_user: hdfs
  register: hdfs_put_tez
  changed_when: hdfs_put_tez.rc == 0
  failed_when: |
    hdfs_put_tez.rc > 1 or
    (hdfs_put_tez.rc == 1 and 'File exists' not in hdfs_put_tez.stderr)
