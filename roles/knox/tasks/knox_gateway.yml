---
- name: Create configuration directory
  file:
    path: '{{ knox_conf_dir }}'
    state: directory
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'

- name: Backup configuration
  copy:
    src: '{{ knox_conf_dir }}/'
    dest: '{{ knox_conf_dir }}.{{ ansible_date_time.epoch }}'
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'
    remote_src: yes
  tags:
    - backup

- name: Template Knox Gateway main start script "gateway.sh"
  template:
    src: gateway.sh.j2
    dest: '{{ knox_install_dir }}/bin/gateway.sh'

- name: Template Knox Gateway environment script "knox-env.sh"
  template:
    src: knox-env.sh.j2
    dest: '{{ knox_install_dir }}/bin/knox-env.sh'

- name: Template Knox Gateway log4j.properties file
  template:
    src: gateway-log4j.properties.j2
    dest: '{{ knox_install_dir }}/conf/gateway-log4j.properties'

- name: Template Knox Gateway Cli log4j.properties file
  template:
    src: knoxcli-log4j.properties.j2
    dest: '{{ knox_install_dir }}/conf/knoxcli-log4j.properties'

- name: Template Knox Gateway Ldap log4j.properties file
  template:
    src: ldap-log4j.properties.j2
    dest: '{{ knox_install_dir }}/conf/ldap-log4j.properties'

- name: Template Knox Gateway Shell log4j.properties file
  template:
    src: shell-log4j.properties.j2
    dest: '{{ knox_install_dir }}/conf/shell-log4j.properties'

- name: Template Knox Gateway service file
  template:
    src: knox-gateway.service.j2
    dest: /usr/lib/systemd/system/knox-gateway.service

- name: Generate principals and keytabs
  shell: |
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "addprinc -randkey knox/{{ ansible_fqdn }}"
    kadmin -r {{ realm }} -p {{ kadmin_principal }} -w {{ kadmin_password }} -q "xst -k knox.service.keytab knox/{{ ansible_fqdn }}@{{ realm }}"
    chown {{ knox_user }}:{{ knox_group }} knox.service.keytab
  args:
    chdir: /etc/security/keytabs
    creates: /etc/security/keytabs/knox.service.keytab

- name: Convert cert and key to pk12
  shell: |
    openssl pkcs12 \
      -export \
      -in /etc/ssl/certs/{{ ansible_fqdn }}.pem \
      -inkey /etc/ssl/certs/{{ ansible_fqdn }}.key \
      -out /etc/ssl/certs/{{ ansible_fqdn }}.p12 \
      -name {{ ansible_fqdn }} \
      -CAfile /etc/ssl/certs/root.pem \
      -caname root_ca \
      -password pass:{{ knox_keystore_password }}
  args:
    creates: '/etc/ssl/certs/{{ ansible_fqdn }}.p12'

- name: Install expect
  package:
    name: expect

- name: Generate Knox master secret
  become_user: knox
  shell: |
    set timeout 10
    spawn {{ knox_install_dir }}/bin/knoxcli.sh create-master --force

    expect "Enter master secret:"
    send "{{ knox_keystore_password }}\r"

    expect "Enter master secret again:"
    send "{{ knox_keystore_password }}\r"

    expect eof
    exit 0
  args:
    executable: /usr/bin/expect
    creates: "{{ knox_install_dir }}/data/security/master"
  register: reg_knox_master_secret

- name: Create keystore and add Certificate Authority into it
  become_user: knox
  shell: |
    keytool \
      -importkeystore \
      -deststorepass {{ knox_keystore_password }} \
      -destkeypass {{ knox_keystore_password }} \
      -destkeystore {{ knox_keystore_location }} \
      -srckeystore /etc/ssl/certs/{{ ansible_fqdn }}.p12 \
      -srcstoretype PKCS12 \
      -srcstorepass {{ knox_keystore_password }} \
      -srcalias {{ ansible_fqdn }} \
      -destalias gateway-identity

    keytool \
      -keystore {{ knox_keystore_location }} \
      -alias root_ca \
      -import \
      -file /etc/ssl/certs/root.pem \
      -storepass {{ knox_keystore_password }} \
      -noprompt
  args:
    creates: '{{ knox_keystore_location }}'

- name: Create truststore
  become_user: knox
  shell: |
    keytool \
      -keystore {{ knox_truststore_location }} \
      -deststorepass {{ knox_truststore_password }} \
      -alias root_ca \
      -import \
      -file /etc/ssl/certs/root.pem \
      -noprompt
  args:
    creates: '{{ knox_truststore_location }}'

- name: Save keystore password in Knox store
  become_user: knox
  command: |
    {{ knox_install_dir }}/bin/knoxcli.sh \
      create-alias gateway-identity-passphrase \
      --value {{ knox_keystore_password }}

- name: Start Knox Gateway
  service:
    name: knox-gateway
    state: started
