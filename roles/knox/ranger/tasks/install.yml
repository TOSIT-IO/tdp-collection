---
- name: Upload {{ ranger_knox_dist_file }}
  copy:
    src: "files/{{ ranger_knox_dist_file }}"
    dest: /tmp

- name: Extract {{ ranger_knox_dist_file }}
  unarchive:
    src: "/tmp/{{ ranger_knox_dist_file }}"
    dest: "{{ knox_root_dir }}"
    group: root
    owner: root
    remote_src: yes
    creates: "{{ knox_root_dir }}/{{ ranger_knox_release }}"

- name: Create symbolic link to Ranger installation
  file:
    src: "{{ knox_root_dir }}/{{ ranger_knox_release }}"
    dest: "{{ ranger_knox_install_dir }}"
    state: link

- name: Create knox service
  run_once: true
  uri:
    url: "{{ ranger_knox_install_properties.POLICY_MGR_URL }}/service/plugins/services"
    method: POST
    body:
      name: "{{ ranger_knox_install_properties.REPOSITORY_NAME }}"
      isEnabled: true
      configs:
        username: knox
        password: knox
        knox.url: "{{ ranger_knox_service_properties.knox_url }}"
        commonNameForCertificate: "{{ ranger_knox_service_properties.common_name_certificate }}"
        policy.download.auth.users: knox
      type: knox
    body_format: json
    force_basic_auth: yes
    user: admin
    password: "{{ ranger_admin_password }}"
    headers:
      Content-Type: application/json
    status_code: [200, 400]
    validate_certs: no
  register: reg_knox
  changed_when: reg_knox.status == 200
  failed_when: |
    reg_knox is failed or
    reg_knox.status == 400 and
    (reg_knox.json.msgDesc is not defined or
    'Duplicate service name' not in reg_knox.json.msgDesc)

- name: Link hdfs-site and core-site in knox conf dir
  file:
    src: "{{ hadoop_conf_dir }}/{{ item }}"
    dest: "{{ knox_conf_dir }}/{{ item }}"
    state: link
  loop:
    - hdfs-site.xml
    - core-site.xml

#TODO Fix it in the build instead
- name: Quickfix of missing jars for ranger plugin
  shell: "ln -s /opt/tdp/hadoop/share/hadoop/hdfs/hadoop-hdfs-* /opt/tdp/ranger-knox-plugin/lib/ranger-knox-plugin-impl/"
  ignore_errors: yes
