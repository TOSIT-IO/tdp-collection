# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: Ensure common yarn installation tasks are performed
  ansible.builtin.import_role:
    name: tosit.tdp.yarn.common
    tasks_from: install

- name: Create YARN recover directory
  ansible.builtin.file:
    path: "{{ yarn_site['yarn.nodemanager.recovery.dir'] }}"
    state: directory
    owner: "{{ yarn_user }}"
    group: "{{ hadoop_group }}"
    mode: "750"

- name: Create YARN Nodemanager local directory
  ansible.builtin.file:
    path: "{{ item | dirname }}"
    state: directory
    owner: "{{ yarn_user }}"
    group: "{{ hadoop_group }}"
    mode: "755"
  vars:
    directories: "{{ yarn_site['yarn.nodemanager.local-dirs'].split(',') | list }}"
    parent_directories: "{{ directories | map('dirname') | list }}"
  loop: "{{ parent_directories + directories }}"

- name: Create YARN log directory
  ansible.builtin.file:
    path: "{{ yarn_site['yarn.nodemanager.log-dirs'] }}"
    state: directory
    owner: "{{ yarn_user }}"
    group: "{{ hadoop_group }}"
    mode: "755"

- name: Create configuration directory
  ansible.builtin.file:
    path: "{{ hadoop_nm_conf_dir }}"
    state: directory
    owner: root
    group: root
    mode: "755"

- name: Template YARN NodeManager service file
  ansible.builtin.template:
    src: hadoop-yarn-nodemanager.service.j2
    dest: /usr/lib/systemd/system/hadoop-yarn-nodemanager.service
    owner: root
    group: root
    mode: "644"
  notify:
  - systemctl daemon-reload

- name: Set bin/container-executor ownership, group and permissions
  ansible.builtin.file:
    path: "{{ hadoop_install_dir }}/bin/container-executor"
    owner: root
    group: "{{ hadoop_group }}"
    mode: "6050"
  when: cgroups_enabled

- name: Create yarn cgroups dirs
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop: "{{ cgroups_yarn_dirs }}"
  when: cgroups_enabled

- name: Apply recursively mode to yarn cgroups dirs 
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    recurse: yes
  loop: "{{ cgroups_yarn_dirs }}"
  when: cgroups_enabled
