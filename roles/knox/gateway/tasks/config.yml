---
- name: Backup configuration
  copy:
    src: '{{ knox_conf_dir }}/'
    dest: '{{ knox_conf_dir }}.{{ ansible_date_time.epoch }}'
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'
    remote_src: yes
  tags:
    - backup

- name: Copy services definition to data directory
  copy:
    src: "{{ knox_install_dir }}/data/services"
    dest: "{{ knox_data_dir }}/data/"
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'
    remote_src: yes

- name: Copy applications definition to data directory
  copy:
    src: "{{ knox_install_dir }}/data/applications"
    dest: "{{ knox_data_dir }}/data/"
    group: '{{ knox_group }}'
    owner: '{{ knox_user }}'
    remote_src: yes

- name: Remove incompatible version (3.0.0) of HDFSUI
  file:
    state: absent
    path: "{{ knox_data_dir }}/data/services/hdfsui/3.0.0"

- name: Template Knox gateway-site.xml
  template:
    src: gateway-site.xml.j2
    dest: '{{ knox_conf_dir }}/gateway-site.xml'

- name: Template Knox Gateway main start script "gateway.sh"
  template:
    src: gateway.sh.j2
    dest: '{{ knox_install_dir }}/bin/gateway.sh'

- name: Template KnoxCLI script
  template:
    src: knoxcli.sh.j2
    dest: '{{ knox_install_dir }}/bin/knoxcli.sh'

- name: Template Knox Gateway environment script "knox-env.sh"
  template:
    src: knox-env.sh.j2
    dest: '{{ knox_install_dir }}/bin/knox-env.sh'

- name: Template Knox Gateway log4j.properties file
  template:
    src: gateway-log4j.properties.j2
    dest: '{{ knox_conf_dir }}/gateway-log4j.properties'

- name: Template Knox Gateway Cli log4j.properties file
  template:
    src: knoxcli-log4j.properties.j2
    dest: '{{ knox_conf_dir }}/knoxcli-log4j.properties'

- name: Template Knox Gateway Ldap log4j.properties file
  template:
    src: ldap-log4j.properties.j2
    dest: '{{ knox_conf_dir }}/ldap-log4j.properties'

- name: Template Knox Gateway Shell log4j.properties file
  template:
    src: shell-log4j.properties.j2
    dest: '{{ knox_conf_dir }}/shell-log4j.properties'

- name: Template Knox topologies
  template:
    src: topology.xml.j2
    dest: '{{ knox_conf_dir }}/topologies/{{ item.key }}.xml'
  loop: "{{ gateway_topology | dict2items }}"
  vars:
    topology: "{{ item.value }}"


