# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: Ensure hadoop group exists
  ansible.builtin.include_role:
    name: tosit.tdp.utils.group
  vars:
    group: "{{ hadoop_group }}"

- name: Ensure solr user exists
  ansible.builtin.include_role:
    name: tosit.tdp.utils.user
  vars:
    user: "{{ solr_user }}"
    group: "{{ hadoop_group }}"

- name: Ensure {{ solr_root_dir }} exists
  ansible.builtin.file:
    path: "{{ solr_root_dir }}"
    state: directory
    owner: root
    group: root
    mode: "755"

- name: Create solr config directory
  ansible.builtin.file:
    path: "{{ solr_conf_dir }}"
    state: directory
    owner: root
    group: root
    mode: "755"

- name: Upload {{ solr_dist_file }}
  ansible.builtin.copy:
    src: "{{ binaries_local_dir }}/{{ solr_dist_file }}"
    dest: "{{ binaries_upload_dir }}"
    owner: root
    group: root
    mode: "644"
  diff: false

- name: Extract {{ solr_dist_file }}
  ansible.builtin.unarchive:
    src: "{{ binaries_upload_dir }}/{{ solr_dist_file }}"
    dest: "{{ solr_root_dir }}"
    owner: root
    group: root
    mode: "755"
    remote_src: true
    creates: "{{ solr_root_dir }}/{{ solr_release }}"

- name: Ensure right permissions on solr folders
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: "755"
    state: directory
  loop:
    - "{{ solr_root_dir }}/{{ solr_release }}"
    - "{{ solr_root_dir }}/{{ solr_release }}/dist"
    - "{{ solr_root_dir }}/{{ solr_release }}/dist/solrj-lib"
    - "{{ solr_root_dir }}/{{ solr_release }}/docs"

# TODO: We should rework the solr service to have configurations in /etc and not here
- name: Ensure right permissions on {{ ranger_solr_datadir }}
  ansible.builtin.file:
    path: "{{ ranger_solr_datadir }}"
    owner: "{{ solr_user }}"
    group: "{{ hadoop_group }}"
    mode: "755"
    state: directory

- name: Create symbolic link to Solr installation
  ansible.builtin.file:
    src: "{{ solr_root_dir }}/{{ solr_release }}"
    dest: "{{ solr_install_dir }}"
    state: link

- name: Create directory for pid
  ansible.builtin.file:
    path: "{{ solr_pid_dir }}"
    state: directory
    owner: "{{ solr_user }}"
    group: "{{ hadoop_group }}"
    mode: "755"

- name: Template solr tmpfiles.d
  ansible.builtin.template:
    src: solr_standalone/tmpfiles-solr.conf.j2
    dest: /etc/tmpfiles.d/solr.conf
    owner: root
    group: root
    mode: "644"

- name: Create log directory
  ansible.builtin.file:
    path: "{{ ranger_log_dir }}"
    state: directory
    group: "{{ hadoop_group }}"
    owner: root
    mode: "770"

- name: Create collection config bootstrap directory
  ansible.builtin.file:
    path: "{{ solr_bootstrap_config_dir }}"
    state: directory
    owner: root
    group: root
    mode: "755"

- name: Upload solr bootstrap configuration files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ solr_bootstrap_config_dir }}"
    owner: root
    group: root
    mode: "644"
  loop:
    - managed-schema
    - elevate.xml

- name: Template solrconfig.xml file
  ansible.builtin.template:
    src: solr_standalone/ranger_audits/solrconfig.xml.j2
    dest: "{{ solr_bootstrap_config_dir }}/solrconfig.xml"
    owner: root
    group: root
    mode: "644"

- name: Template log4j2.properties file
  ansible.builtin.template:
    src: solr_standalone/log4j2.properties.j2
    dest: "{{ solr_conf_dir }}/log4j2.properties"
    owner: root
    group: root
    mode: "644"

- name: Template Solr service file
  ansible.builtin.template:
    src: solr_standalone/solr.service.j2
    dest: /usr/lib/systemd/system/solr.service
    owner: root
    group: root
    mode: "644"
  notify:
    - systemctl daemon-reload
